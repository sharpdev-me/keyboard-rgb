export enum Rows {
    FUNCTION,
    NUMBERS,
    TOP,
    MIDDLE,
    BOTTOM,
    META
};

export const Colors = {
    WHITE: rgb(255),
    RED: rgb(255, 0, 0),
    BLUE: rgb(0, 0, 255),
    GREEN: rgb(0, 255, 0),
    AQUA: rgb(0, 255, 255),
    PURPLE: rgb(255, 0, 255),
    PINK: rgb(255, 61, 226),
    YELLOW: rgb(255, 255, 0),
    ORANGE: rgb(255, 128, 0),
    BLACK: rgb(0),
    rgb: rgb,
    hex: hex
}

export type KeyColor = {
    red: number;
    green: number;
    blue: number;
}

export enum KeyNames {
    ESC = "esc",
    F1 = "f1",
    F2 = "f2",
    F3 = "f3",
    F4 = "f4",
    F5 = "f5",
    F6 = "f6",
    F7 = "f7",
    F8 = "f8",
    F9 = "f9",
    F10 = "f10",
    F11 = "f11",
    F12 = "f12",
    PRINT_SCREEN = "PrtScreen",
    SCROLL_LOCK = "ScrLock",
    PAUSE_BREAK = "PauseBreak",
    GRAVE = "Grave",
    ONE = "One",
    TWO = "Two",
    THREE = "Three",
    FOUR = "Four",
    FIVE = "Five",
    SIX = "Six",
    SEVEN = "Seven",
    EIGHT = "Eight",
    NINE = "Nine",
    ZERO = "Zero",
    MINUS = "Minus",
    EQUALS = "Equals",
    BACKSPACE = "Backspace",
    INSERT = "Insert",
    HOME = "Home",
    PAGE_UP = "PgUp",
    TAB = "Tab",
    Q = "Q",
    W = "W",
    E = "E",
    R = "R",
    T = "T",
    Y = "Y",
    U = "U",
    I = "I",
    O = "O",
    P = "P",
    LEFT_BRACKET = "LBracket",
    RIGHT_BRACKET = "RBracket",
    BACKSLASH = "Backslash",
    DELETE = "Delete",
    END = "End",
    PAGE_DOWN = "PgDn",
    CAPS_LOCK = "Caps",
    A = "A",
    S = "S",
    D = "D",
    F = "F",
    G = "G",
    H = "H",
    J = "J",
    K = "K",
    L = "L",
    SEMI_COLON = "SemiColon",
    APOSTROPHE = "Apostrophe",
    ENTER = "Enter",
    LEFT_SHIFT = "LShift",
    Z = "Z",
    X = "X",
    C = "C",
    V = "V",
    B = "B",
    N = "N",
    M = "M",
    COMMA = "Comma",
    PERIOD = "Period",
    SLASH = "Slash",
    RIGHT_SHIFT = "RShift",
    UP_ARROW = "Up",
    LEFT_CONTROL = "LCtrl",
    META = "Meta",
    LEFT_ALT = "LAlt",
    SPACE = "Space",
    RIGHT_ALT = "RAlt",
    FUNCTION = "Fn",
    MENU = "Menu",
    RIGHT_CONTROL = "RCtrl",
    LEFT_ARROW = "Left",
    DOWN_ARROW = "Down",
    RIGHT_ARROW = "Right",
    TEN = "Zero"
}

export const Groups: {[key: string]: KeyNames[]} = {
    NUMBERS: [
        KeyNames.ONE,
        KeyNames.TWO,
        KeyNames.THREE,
        KeyNames.FOUR,
        KeyNames.FIVE,
        KeyNames.SIX,
        KeyNames.SEVEN,
        KeyNames.EIGHT,
        KeyNames.NINE,
        KeyNames.ZERO
    ],
    LETTERS: [
        KeyNames.Q,
        KeyNames.W,
        KeyNames.E,
        KeyNames.R,
        KeyNames.T,
        KeyNames.Y,
        KeyNames.U,
        KeyNames.I,
        KeyNames.O,
        KeyNames.P,
        KeyNames.A,
        KeyNames.S,
        KeyNames.D,
        KeyNames.F,
        KeyNames.G,
        KeyNames.H,
        KeyNames.J,
        KeyNames.K,
        KeyNames.L,
        KeyNames.Z,
        KeyNames.X,
        KeyNames.C,
        KeyNames.V,
        KeyNames.B,
        KeyNames.N,
        KeyNames.M
    ],
    BODY: [
        KeyNames.Q,
        KeyNames.W,
        KeyNames.E,
        KeyNames.R,
        KeyNames.T,
        KeyNames.Y,
        KeyNames.U,
        KeyNames.I,
        KeyNames.O,
        KeyNames.P,
        KeyNames.A,
        KeyNames.S,
        KeyNames.D,
        KeyNames.F,
        KeyNames.G,
        KeyNames.H,
        KeyNames.J,
        KeyNames.K,
        KeyNames.L,
        KeyNames.Z,
        KeyNames.X,
        KeyNames.C,
        KeyNames.V,
        KeyNames.B,
        KeyNames.N,
        KeyNames.M,
        KeyNames.LEFT_BRACKET,
        KeyNames.RIGHT_BRACKET,
        KeyNames.SEMI_COLON,
        KeyNames.APOSTROPHE,
        KeyNames.COMMA,
        KeyNames.PERIOD,
        KeyNames.SLASH
    ],
    EDGE: [
        KeyNames.GRAVE,
        KeyNames.ONE,
        KeyNames.TWO,
        KeyNames.THREE,
        KeyNames.FOUR,
        KeyNames.FIVE,
        KeyNames.SIX,
        KeyNames.SEVEN,
        KeyNames.EIGHT,
        KeyNames.NINE,
        KeyNames.ZERO,
        KeyNames.MINUS,
        KeyNames.EQUALS,
        KeyNames.BACKSPACE,
        KeyNames.TAB,
        KeyNames.BACKSLASH,
        KeyNames.CAPS_LOCK,
        KeyNames.ENTER,
        KeyNames.LEFT_SHIFT,
        KeyNames.RIGHT_SHIFT,
        KeyNames.LEFT_CONTROL,
        KeyNames.META,
        KeyNames.LEFT_ALT,
        KeyNames.SPACE,
        KeyNames.RIGHT_ALT,
        KeyNames.FUNCTION,
        KeyNames.MENU,
        KeyNames.RIGHT_CONTROL
    ],
    MAIN: [
        KeyNames.Q,
        KeyNames.W,
        KeyNames.E,
        KeyNames.R,
        KeyNames.T,
        KeyNames.Y,
        KeyNames.U,
        KeyNames.I,
        KeyNames.O,
        KeyNames.P,
        KeyNames.A,
        KeyNames.S,
        KeyNames.D,
        KeyNames.F,
        KeyNames.G,
        KeyNames.H,
        KeyNames.J,
        KeyNames.K,
        KeyNames.L,
        KeyNames.Z,
        KeyNames.X,
        KeyNames.C,
        KeyNames.V,
        KeyNames.B,
        KeyNames.N,
        KeyNames.M,
        KeyNames.LEFT_BRACKET,
        KeyNames.RIGHT_BRACKET,
        KeyNames.SEMI_COLON,
        KeyNames.APOSTROPHE,
        KeyNames.COMMA,
        KeyNames.PERIOD,
        KeyNames.SLASH,
        KeyNames.GRAVE,
        KeyNames.ONE,
        KeyNames.TWO,
        KeyNames.THREE,
        KeyNames.FOUR,
        KeyNames.FIVE,
        KeyNames.SIX,
        KeyNames.SEVEN,
        KeyNames.EIGHT,
        KeyNames.NINE,
        KeyNames.ZERO,
        KeyNames.MINUS,
        KeyNames.EQUALS,
        KeyNames.BACKSPACE,
        KeyNames.TAB,
        KeyNames.BACKSLASH,
        KeyNames.CAPS_LOCK,
        KeyNames.ENTER,
        KeyNames.LEFT_SHIFT,
        KeyNames.RIGHT_SHIFT,
        KeyNames.LEFT_CONTROL,
        KeyNames.META,
        KeyNames.LEFT_ALT,
        KeyNames.SPACE,
        KeyNames.RIGHT_ALT,
        KeyNames.FUNCTION,
        KeyNames.MENU,
        KeyNames.RIGHT_CONTROL
    ]
}

export function round(color: KeyColor): KeyColor {
    return {
        red: Math.round(color.red),
        green: Math.round(color.green),
        blue: Math.round(color.blue)
    }
}

function rgb(...channels: number[]): KeyColor {
    let r = {red: 0, green: 0, blue: 0};
    if(channels.length == 1) r = {red: channels[0], green: channels[0], blue: channels[0]};
    if(channels.length == 2) r = {red: channels[0], green: channels[1], blue: 0};
    if(channels.length == 3) r = {red: channels[0], green: channels[1], blue: channels[2]};
    r = round(r);
    r.toString = () => {
        return `${r.red},${r.green},${r.blue}`;
    }
    return r;
}

function hex(color: string): KeyColor {
    let r = Buffer.from(color.slice(0, 2), "hex")[0];
    let g = Buffer.from(color.slice(2, 4), "hex")[0];
    let b = Buffer.from(color.slice(4, 6), "hex")[0];
    return Colors.rgb(r, g, b);
}